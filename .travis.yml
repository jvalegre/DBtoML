# adapted from https://github.com/rdkit/rdkit-tutorials/blob/master/.travis.yml

language: python
python:
  - "3.7"

sudo: required

# xTB needs gcc-8 and gfortran-8 to be compiled
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - gfortran-8
      env: CC='gcc-8' FC='gfortran-8'

before_install:
  # download and install miniconda
  - wget http://repo.continuum.io/miniconda/Miniconda3-4.1.11-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/conda
  - export PATH="$HOME/conda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # create and activate the build/test environment
  - conda create -q -n tenv python=$TRAVIS_PYTHON_VERSION pip cmake
  - source activate tenv
  - sudo apt-get update

install:
  - conda install -c openbabel openbabel==2.4.1
  - pip install PyYAML==5.3.1
  - pip install pandas==1.0.3
  - conda install -c rdkit rdkit=2020.03.2.0
  - pip install pytest==5.4.2
  - python setup.py install
  - pip install progress==1.5
  - pip install pytest-cov==2.9.0
  - pip install codecov==2.1.3
  - pip install ase==3.19.1
  - pip install torch==1.5.0+cpu torchvision==0.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
  - pip install torchani==2.0
  # - pip install goodvibes
  # for xTB
  - pip install Cython==0.29.19
  - pip install meson==0.54.2
  - pip install ninja==1.9.0.post1
  - sudo apt-get install libblas-dev liblapack-dev
  - sudo apt-get install libopenblas-base libopenblas-dev

before_script:
  # For xTB
  - wget https://github.com/grimme-lab/xtb/archive/v6.3.0.zip
  - unzip v6.3.0.zip
  - cd xtb-6.3.0
  - meson setup build_gcc --buildtype release -Dla_backend=openblas --warnlevel 0
  - XTBHOME=$PWD
  - XTBPATH=${XTBHOME}/share/xtb:${XTBHOME}:${HOME}
  - MANPATH=${MANPATH}:${XTBHOME}/share/man
  - PATH=${PATH}:${XTBHOME}/bin
  - LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${XTBHOME}/lib
  - PYTHONPATH=${PYTHONPATH}:${XTBHOME}/python
  - export PATH XTBPATH MANPATH LD_LIBRARY_PATH PYTHONPATH
  # - ninja -C build_gcc test
  # change it into wget + unzip zip when there is a release (that way the version used will always be the same)
  - git clone --branch=master https://github.com/grimme-lab/xtb-python
  - cd xtb-python
  - git submodule update --init
  # install the MKL library
  - wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
  - sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
  - rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
  - sudo sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'
  - sudo apt-get update
  - sudo apt-get install intel-mkl-2020.0-088
  # - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/composer_xe_2013_sp1/mkl/lib/intel64
  # - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/opt/intel/parallel_studio_xe_2020.0.088/compilers_and_libraries_2020/linux/mkl/
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - pwd
  - ls
  - cd ..
  - ls
  - cd ..
  - ls
  - cd opt
  - ls
  - cd intel
  - ls
  - cd compilers_and_libraries_2020
  - ls
  - cd ..
  - cd parallel_studio_xe_2020.0.088
  - ls
  - cd compilers_and_libraries_2020
  - ls
  - meson setup build --prefix=$PWD --libdir=xtb
  - ninja -C build install
  - pip install -e .
  - cd ..
  - cd ..

script:
  - cd tests
  - pytest -v --cov=pyconfort
  - codecov
