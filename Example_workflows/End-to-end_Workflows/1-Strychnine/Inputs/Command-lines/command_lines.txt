# Run CSEARCH conformational search
python -m aqme --csearch --program rdkit --smi "C1CN2CC3=CCO[C@H]4CC(=O)N5[C@H]6[C@H]4[C@H]3C[C@H]2[C@@]61C7=CC=CC=C75" --name Strychnine


# Run QPREP to create Gaussian input files
python -m aqme --qprep --program gaussian --files "CSEARCH/*sdf" --qm_input "B3LYP/6-31+G(d,p) opt freq" --mem "24GB" --nprocs 24


# Run Gaussian jobs for optimization and frequency (externally)


# Run first QCORR analysis
python -m aqme --qcorr --files "QCALC/*.log" --mem "24GB" --nprocs 12 --freq_conv "opt=(calcfc,maxstep=5)" --isom_type "com" --isom_inputs "QCALC"


# create single-point inputs for NMR
python -m aqme --qprep --program gaussian --files "QCALC/success/*log" --destination "NMR-SP" --qm_input "B3LYP/6-311+G(2d,p) scrf=(solvent=chloroform,smd) nmr=giao" --suffix SP --nprocs 12


# Run Gaussian jobs for NMR single points (externally)


# Store the NMR data in JSON files
python -m aqme --qcorr --files "NMR-SP/*_SP.log"


# Generate  Boltzmann averaged shielding tensors for [C,H]
python -m aqme --qdescp --program nmr --boltz --files "NMR-SP/success/SP_calcs/json_files/*_SP.json" --nmr_slope "[-1.0537, -1.0784]" --nmr_intercept "[181.7815,31.8723]" --nmr_experim "Experimental_NMR_shifts.csv"


# Compute thermochemistry and Boltzmann populations with GoodVibes
python -m goodvibes --boltz --xyz -c 1 QCALC/success/*log